OPEN-CLCB-FILES.                                                 
    OPEN OUTPUT CLCB-NON-MONETARY-TRANS-FILE.                    
    IF WS-LBNMT-STATUS IS NOT EQUAL TO ZERO                      
        MOVE 21001 TO WS-ABEND-CODE                              
        MOVE 'INVALID LBNMT FILE OPEN' TO WS-ABENDMSG            
        MOVE WS-LBNMT-STATUS TO WS-ABEND-STATUS                  
        PERFORM CCSI-ABEND  THRU  CCSI-ABEND-EXIT.               
                                                                 
                                                                 
    OPEN INPUT CLCB-SYSTEM-CONTROL-FILE.                         
    IF WS-LBSYS-STATUS IS NOT EQUAL TO ZERO                      
        MOVE 21008 TO WS-ABEND-CODE                              
        MOVE 'INVALID LBSYS FILE OPEN' TO WS-ABENDMSG            
        MOVE WS-LBSYS-STATUS TO WS-ABEND-STATUS                  
        PERFORM CCSI-ABEND  THRU  CCSI-ABEND-EXIT.               
                                                                 
    MOVE ZEROS TO LBSYS-FD-ORG   LBSYS-FD-TYPE.                  
    READ CLCB-SYSTEM-CONTROL-FILE .                              
    IF WS-LBSYS-STATUS IS NOT EQUAL TO ZERO                      
       MOVE 21009 TO WS-ABEND-CODE                               
       MOVE 'INVALID LBSYS READ' TO WS-ABENDMSG                  
       MOVE WS-LBSYS-STATUS TO WS-ABEND-STATUS                   
       PERFORM CCSI-ABEND THRU CCSI-ABEND-EXIT.                  
                                                                 
    MOVE LBSYS-FD-RECORD        TO  LBSYS-RECORD.                
    MOVE ZEROS                  TO  WS-NBR-ITEM                  
                                    WS-TOT-AMT.                  
    MOVE +90000                 TO  WS-BATCH-NBR.                
                                                                 
    OPEN OUTPUT CIA-MONETARY-USER-INPUT-FILE.                    
    IF WS-LBUIM-STATUS NOT EQUAL TO ZERO                         
       MOVE 21010 TO WS-ABEND-CODE                               
       MOVE 'INVALID LBUIM OPEN' TO WS-ABENDMSG                  
       MOVE WS-LBUIM-STATUS TO WS-ABEND-STATUS                   
       PERFORM CCSI-ABEND THRU CCSI-ABEND-EXIT.                  
                                                                 
                                                                 
OCLF-EXIT.                                                       
    EXIT.                                                        
CLCB-BLOCK-DELQ-ANFEE-ROUTINE.                                   
    PERFORM CLCB-PROCESS-BLK-DELQ THRU CPBD-EXIT.                
                                                                 
                                                                 
CBDAR-EXIT.                                                      
    EXIT.                                                        
CLCB-PROCESS-BLK-DELQ.                                           
    IF CM-BLOCK-CODE IS NOT EQUAL TO WSCLCB-BLOCK-ORI            
       PERFORM MOVE-STD-VALUES THRU MSV-EXIT                     
       PERFORM MOVE-BLOCK-CODE-VALUE THRU MBCV-EXIT.             
                                                                 
    IF CM-DTE-BLOCK-CODE IS NOT EQUAL TO WSCLCB-DTE-BLOCK-ORI    
       PERFORM MOVE-STD-VALUES THRU MSV-EXIT                     
       PERFORM MOVE-DTE-BLOCK-CODE-VALUE THRU MDBCV-EXIT.        
                                                                 
    IF CM-ALT-BLOCK-CODE IS NOT EQUAL TO WSCLCB-ALT-BLK-ORI      
       PERFORM MOVE-STD-VALUES THRU MSV-EXIT                     
       PERFORM MOVE-ALT-BLK-VALUE THRU MABV-EXIT.                
                                                                 
    IF CM-DTE-ALT-BLOCK-CODE IS NOT EQUAL TO                     
                                    WSCLCB-DTE-ALT-BLK-ORI       
       PERFORM MOVE-STD-VALUES THRU MSV-EXIT                     
       PERFORM MOVE-DTE-ALT-BLK-VALUE THRU MDABV-EXIT.           
                                                                 
    IF CM-CYCLE-DUE  IS NOT EQUAL TO WSCLCB-CYCLE-DUE-ORI        
       PERFORM MOVE-STD-VALUES THRU MSV-EXIT                     
       PERFORM MOVE-CYCLE-DUE-VALUE THRU MCDV-EXIT.              
                                                                 
CPBD-EXIT.                                                       
    EXIT.                                                        
MOVE-STD-VALUES.                                                 
    MOVE SPACES             TO LBNMT-DETL-RECORD.                
    MOVE 8                  TO LBNMT-OM-FILE.                    
    MOVE 2                  TO LBNMT-REC-TYPE.                   
    MOVE SPACES             TO LBNMT-OM-CARDHOLDER-KEY.          
    MOVE CM-ORG-NMBR        TO LBNMT-OM-HK-ORG.                  
    MOVE CM-TYPE            TO LBNMT-OM-HK-TYPE.                 
    MOVE CM-CARD-NMBR       TO LBNMT-OM-HK-CARDHOLDER.           
    MOVE OC-TODAYS-JULIAN   TO LBNMT-OM-JULIAN.                  
    MOVE 220000             TO LBNMT-OM-TIME.                    
    MOVE 'SYSTEM - CPD110'  TO LBNMT-M-SIGNON-NAME.              
    MOVE 'SYS'              TO LBNMT-M-TERM-ID.                  
    MOVE '2'                TO LBNMT-M-SOURCE-CODE.              
                                                                 
MSV-EXIT.                                                        
    EXIT.                                                        
MOVE-BLOCK-CODE-VALUE.                                           
    MOVE 16                 TO LBNMT-OM-FIELD-NMBR.              
    MOVE WSCLCB-BLOCK-ORI   TO LBNMT-M-FROM-DATA.                
    MOVE CM-BLOCK-CODE      TO LBNMT-M-TO-DATA.                  
    PERFORM WRITE-LBNMT-FILE THRU WLF-EXIT.                      
                                                                 
MBCV-EXIT.                                                       
    EXIT.                                                        
MOVE-DTE-BLOCK-CODE-VALUE.                                       
    MOVE 28                   TO LBNMT-OM-FIELD-NMBR.            
    MOVE WSCLCB-DTE-BLOCK-ORI TO LBNMT-FROM-N-7.                 
    MOVE CM-DTE-BLOCK-CODE    TO LBNMT-TO-N-7.                   
    PERFORM WRITE-LBNMT-FILE THRU WLF-EXIT.                      
                                                                 
MDBCV-EXIT.                                                      
    EXIT.                                                        
MOVE-ALT-BLK-VALUE.                                              
    MOVE 17                 TO LBNMT-OM-FIELD-NMBR.              
    MOVE WSCLCB-ALT-BLK-ORI TO LBNMT-M-FROM-DATA.                
    MOVE CM-ALT-BLOCK-CODE  TO LBNMT-M-TO-DATA.                  
    PERFORM WRITE-LBNMT-FILE THRU WLF-EXIT.                      
                                                                 
MABV-EXIT.                                                       
    EXIT.                                                        
MOVE-DTE-ALT-BLK-VALUE.                                          
    MOVE 29                     TO LBNMT-OM-FIELD-NMBR.          
    MOVE WSCLCB-DTE-ALT-BLK-ORI TO LBNMT-FROM-N-7.               
    MOVE CM-DTE-ALT-BLOCK-CODE  TO LBNMT-TO-N-7.                 
    PERFORM WRITE-LBNMT-FILE THRU WLF-EXIT.                      
                                                                 
MDABV-EXIT.                                                      
    EXIT.                                                        
MOVE-CYCLE-DUE-VALUE.                                            
    MOVE 31                    TO  LBNMT-OM-FIELD-NMBR.          
    MOVE WSCLCB-CYCLE-DUE-ORI  TO  LBNMT-FROM-N-1.               
    MOVE CM-CYCLE-DUE          TO  LBNMT-TO-N-1.                 
    PERFORM WRITE-LBNMT-FILE THRU WLF-EXIT.                      
                                                                 
MCDV-EXIT.                                                       
    EXIT.                                                        
COMPUTE-NEXT-STMT-DTE.                                           
    MOVE CM-CYCLE     TO WSCLCB-CYCLE.                           
    IF WSCLCB-CYCLE IS GREATER THAN 28                           
       IF WS-DATE-FORMAT IS EQUAL TO 1                           
          MOVE WSCLCB-DAY TO WSCLCB-MTH                          
          PERFORM MOVE-MTH-END-DAY THRU MMED-EXIT                
       ELSE                                                      
          MOVE WSCLCB-MON TO WSCLCB-MTH                          
          PERFORM MOVE-MTH-END-DAY THRU MMED-EXIT.               
                                                                 
    IF WS-DATE-FORMAT IS EQUAL TO 1                              
       MOVE WSCLCB-CYCLE  TO WSCLCB-MON                          
    ELSE                                                         
       MOVE WSCLCB-CYCLE  TO WSCLCB-DAY.                         
                                                                 
    MOVE WSCLCB-YYYY-FORMAT  TO  WS-DTE-DATE.                    
    PERFORM CCSI-GREG-TO-JUL THRU CCSI-GTJ-EXIT.                 
    MOVE WS-DTE-JULIAN       TO  WSCLCB-DTE-NXT-STMT.            
                                                                 
    IF WSCLCB-CYCLE IS LESS THAN WSCLCB-TODAY-DD                 
       MOVE WSCLCB-DTE-NXT-STMT   TO WS-DTE-JULIAN               
       MOVE 1                     TO WS-DTE-FREQ                 
       MOVE 'M'                   TO WS-DTE-PERIOD               
       MOVE ZEROS                 TO WS-DTE-DAY-OF-MON           
       PERFORM CCSI-FUTURE-DATE THRU CCSI-FD-EXIT                
       MOVE WS-DTE-JULIAN TO WSCLCB-DTE-NXT-STMT.                
                                                                 
CNSD-EXIT.                                                       
    EXIT.                                                        
MOVE-MTH-END-DAY.                                                
    IF WSCLCB-MTH IS EQUAL TO 04 OR 06 OR 09 OR 11               
       IF WSCLCB-CYCLE IS NOT LESS THAN 30                       
          MOVE 30 TO WSCLCB-CYCLE                                
       ELSE                                                      
          NEXT SENTENCE                                          
    ELSE                                                         
       IF WSCLCB-MTH IS EQUAL TO 02                              
          COMPUTE WS-DTE-WORK = WSCLCB-YEAR * 250                
          IF WS-DTE-RMDR IS GREATER THAN ZERO   OR               
             WS-DTE-SPECIAL-LEAP-YEAR-SKIP                       
             MOVE 28  TO WSCLCB-CYCLE                            
          ELSE                                                   
             MOVE 29  TO WSCLCB-CYCLE .                          
                                                                 
MMED-EXIT.                                                       
    EXIT.                                                        
SELECT-VALID-CLCB-TC.                                            
    MOVE SPACE TO WS-TC-MATCH.                                   
                                                                 
    IF TRR-RPT-NMBR IS NOT EQUAL TO 02                           
       GO TO SVCT-EXIT.                                          
                                                                 
    IF (WST-TRANS-CODE IS EQUAL TO 32 OR 33 OR 42 OR 43) AND     
       ((WST-DESC IS EQUAL TO 'TRANSFER CR RETAIL') OR           
        (WST-DESC IS EQUAL TO 'd|i+F*$,    ') OR           
        (WST-DESC IS EQUAL TO 'TRANSFER DB RETAIL') OR           
        (WST-DESC IS EQUAL TO 'd+F*$,    ') OR           
        (WST-DESC IS EQUAL TO 'TRANSFER DB CASH')   OR           
        (WST-DESC IS EQUAL TO '|j+F*$,  ')   OR           
        (WST-DESC IS EQUAL TO 'TRANSFER CR CASH')   OR           
        (WST-DESC IS EQUAL TO '|j|i+F*$,  '))               
         GO TO SVCT-EXIT.                                        
                                                                 
    PERFORM CHECK-FOR-VALID-TC                                   
       THRU CFVT-EXIT                                            
       VARYING WS-CLCB-COUNT FROM 1 BY 1                         
       UNTIL (WS-CLCB-COUNT IS GREATER THAN 48) OR TC-MATCH.     
                                                                 
    IF TC-MATCH                                                  
       MOVE WS-CLCB-THIS-ORG    TO WS-CLCB-PREV-ORG              
       MOVE TRR-ORGN-NMBR       TO WS-CLCB-THIS-ORG              
       PERFORM CHECK-DIFF-ORG THRU CDO-EXIT                      
       PERFORM CHECK-NBR-ITEM-LIMIT THRU CNIL-EXIT               
       ADD 1           TO WS-NBR-ITEM                            
       ADD WST-AMOUNT  TO WS-TOT-AMT                             
       PERFORM MOVE-VALUE-WRITE-LBUIM THRU MVWL-EXIT .           
                                                                 
SVCT-EXIT.                                                       
    EXIT.                                                        
CHECK-FOR-VALID-TC.                                              
    IF (LBSYS-SYS-VALID-TC(WS-CLCB-COUNT) IS EQUAL TO            
        WST-TRANS-CODE)                   OR                     
       (WST-TRANS-CODE IS EQUAL TO 44 OR 45)                     
        MOVE 'Y' TO WS-TC-MATCH.                                 
                                                                 
CFVT-EXIT.                                                       
    EXIT.                                                        
MOVE-VALUE-WRITE-LBUIM.                                          
    MOVE 2                   TO LBUIM-T-REC-TYPE .               
    MOVE 2                   TO LBUIM-T-STATUS.                  
    MOVE WS-BATCH-NBR        TO LBUIM-T-BATCH-NBR.               
    MOVE WS-NBR-ITEM         TO LBUIM-T-SEQ-NBR.                 
    MOVE TRR-ORGN-NMBR       TO LBUIM-T-CARDHLD-ORG.             
    MOVE TRR-TYPE-NMBR       TO LBUIM-T-CARDHLD-TYPE.            
    MOVE WST5-ACCT-NMBR      TO LBUIM-T-CARDHLD-NBR.             
    MOVE WST-TRANS-CODE      TO LBUIM-T-CODE.                    
    MOVE SPACES              TO LBUIM-T-DESC.                    
    MOVE WST-DESC            TO LBUIM-T-DESC.                    
    MOVE CMT-POSTING-DTE     TO LBUIM-T-POST-DATE.               
    MOVE WST-PURCHASE-DTE    TO LBUIM-T-DATE.                    
    MOVE WST-AMOUNT          TO LBUIM-T-AMOUNT.                  
    MOVE WST-REF-NMBR        TO LBUIM-T-REFERENCE.               
    MOVE 1                   TO LBUIM-T-SOURCE-ID.               
    MOVE 'CIA'               TO LBUIM-T-OPERATOR.                
    MOVE CMT-MERCH-ORGN      TO LBUIM-T-MERCHANT-ORG.            
    MOVE CMT-MERCH-ACCT      TO LBUIM-T-MERCHANT-NBR.            
    MOVE CMT-DBA-COUNTRY     TO LBUIM-T-DBA-COUNTRY.             
    MOVE ZEROS               TO LBUIM-T-POINTS                   
                                LBUIM-T-PARTNER-ID               
                                LBUIM-T-PROGRAM-ID.              
                                                                 
    IF CMT-MERCH-CATEGORY IS  NOT NUMERIC                        
       MOVE ZEROS              TO LBUIM-T-MCC                    
    ELSE                                                         
       MOVE CMT-MERCH-CATEGORY TO LBUIM-T-MCC.                   
                                                                 
    WRITE LBUIM-TRANS-REC.                                       
    IF WS-LBUIM-STATUS NOT EQUAL TO ZERO                         
       MOVE 10007 TO WS-ABEND-CODE                               
       MOVE 'INVALID LBUIM WRITE' TO WS-ABENDMSG                 
       MOVE WS-LBUIM-STATUS TO WS-ABEND-STATUS                   
       PERFORM CCSI-ABEND THRU CCSI-ABEND-EXIT.                  
                                                                 
MVWL-EXIT.                                                       
    EXIT.                                                        
WRITE-LBUIM-BATCH-HEADER.                                        
    IF (WS-NBR-ITEM IS EQUAL TO ZERO) AND                        
       (WS-BATCH-NBR IS EQUAL TO +90000)                         
       GO TO WLBH-EXIT.                                          
                                                                 
    MOVE ZEROS               TO LBUIM-IH-RECORD.                 
    MOVE 1                   TO LBUIM-H-REC-TYPE .               
    MOVE 2                   TO LBUIM-H-STATUS.                  
    MOVE WS-BATCH-NBR        TO LBUIM-H-BATCH-NBR.               
    MOVE ZEROS               TO LBUIM-H-SEQ-NBR                  
                                LBUIM-H-POINTS                   
                                LBUIM-H-PROC-DTE.                
    MOVE WS-CLCB-PREV-ORG    TO LBUIM-H-ORG.                     
    MOVE WS-NBR-ITEM         TO LBUIM-H-NBR-ITEM.                
    MOVE WS-TOT-AMT          TO LBUIM-H-AMOUNT.                  
    MOVE 'CIA'               TO LBUIM-H-OPERATOR.                
    MOVE 1                   TO LBUIM-H-SOURCE-ID.               
                                                                 
    WRITE LBUIM-IH-RECORD.                                       
    IF WS-LBUIM-STATUS NOT EQUAL TO ZERO                         
       MOVE 10008 TO WS-ABEND-CODE                               
       MOVE 'INVALID LBUIM WRITE' TO WS-ABENDMSG                 
       MOVE WS-LBUIM-STATUS TO WS-ABEND-STATUS                   
       PERFORM CCSI-ABEND THRU CCSI-ABEND-EXIT.                  
                                                                 
WLBH-EXIT.                                                       
    EXIT.                                                        
WRITE-LBNMT-FILE.                                                
    WRITE LBNMT-DETL-RECORD.                                     
    IF WS-LBNMT-STATUS IS EQUAL TO ZERO                          
       NEXT SENTENCE                                             
    ELSE                                                         
       MOVE 21003 TO WS-ABEND-CODE                               
       MOVE 'INVALID LBNMT WRITE' TO WS-ABENDMSG                 
       MOVE WS-LBNMT-STATUS TO WS-ABEND-STATUS                   
       PERFORM CCSI-ABEND  THRU  CCSI-ABEND-EXIT.                
                                                                 
WLF-EXIT.                                                        
    EXIT.                                                        
CHECK-NBR-ITEM-LIMIT.                                            
    IF WS-NBR-ITEM IS EQUAL TO 999                               
       PERFORM WRITE-LBUIM-BATCH-HEADER THRU WLBH-EXIT           
       MOVE ZEROS TO WS-NBR-ITEM   WS-TOT-AMT                    
       ADD 1      TO WS-BATCH-NBR.                               
                                                                 
CNIL-EXIT.                                                       
    EXIT.                                                        
CHECK-DIFF-ORG.                                                  
    IF WS-CLCB-THIS-ORG NOT EQUAL TO WS-CLCB-PREV-ORG            
       PERFORM WRITE-LBUIM-BATCH-HEADER THRU WLBH-EXIT           
       MOVE ZEROS TO WS-NBR-ITEM   WS-TOT-AMT                    
       ADD 1      TO WS-BATCH-NBR.                               
                                                                 
CDO-EXIT.                                                        
    EXIT.                                                        
